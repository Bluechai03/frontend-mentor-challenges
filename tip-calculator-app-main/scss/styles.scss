:root {
  --clr-primary: hsl(172, 67%, 45%);
  --clr-primary-dark: hsl(183, 100%, 15%);
  --clr-primary-light: hsl(185, 41%, 84%);
  --clr-gray-dark: hsl(186, 14%, 43%);
  --clr-gray: hsl(184, 14%, 56%);
  --clr-cream: hsl(189, 41%, 97%);
  --clr-error: rgb(255, 126, 126);
}

%center-vertical {
  display: flex;
  align-items: center;
}

@mixin mq($min-width, $max-width) {
  @media screen and (min-width: $min-width) and (max-width: $max-width) {
    @content;
  }
}

@mixin mq-min($min-width: 42em) {
  @media screen and (min-width: $min-width) {
    @content;
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
h2,
h3,
p {
  margin: 0;
}

p,
label {
  font-weight: 600;
  color: var(--clr-gray-dark);
  display: block;
}

body {
  margin: auto;
  padding: 0;
  background: var(--clr-primary-light);
  font-family: 'Space Mono', monospace;
  min-height: 100vh;
  width: 100%;
  max-width: 1024px;
  display: flex;
  flex-direction: column;
  display: grid;
  place-items: center stretch;
  @include mq-min(52em) {
    grid-template-rows: 1fr 2fr 1fr;
  }
}

.btn {
  all: unset;
  padding: 0.5rem;
  background: var(--clr-primary-dark);
  color: white;
  text-align: center;
  border: none;
  border-radius: 0.2em;
  font-size: clamp(1.35rem, 3vw, 1.75rem);
  font-weight: 700;
  cursor: pointer;
  transition: background-color 100ms ease-in-out;
  &:hover,
  &:focus,
  &:active,
  &--active {
    background: hsl(185, 41%, 84%);
    color: var(--clr-primary-dark);
  }

  &:disabled {
    background: var(--clr-primary);
    color: var(--clr-primary-dark);
  }

  &--reset {
    text-transform: uppercase;
    background: var(--clr-primary-light);
    color: var(--clr-primary-dark);
    margin: 1rem 0;
    opacity: 0.4;
    transition: opacity 100ms ease-in-out, background-color 100ms ease-in-out;
    &:hover,
    &:focus {
      opacity: 1;
    }

    &:active,
    &:focus {
      background: var(--clr-primary);
    }
  }
}

.grid {
  margin-top: 1rem;
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));
  grid-auto-rows: minmax(1rem, auto);
  @include mq-min() {
    grid-template-columns: repeat(3, 1fr);
  }
}

.title {
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 1rem;
  padding: 2rem;
  color: var(--clr-gray-dark);
  &::after {
    display: block;
    content: 'tter';
  }
}

.card {
  padding: 2rem;
  background: #fff;
  border-radius: 1.125rem;
}

.flex {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  @include mq-min(52em) {
    flex-direction: row;
  }
}

.col {
  width: 100%;
  &--input {
    label ~ label,
    p {
      margin-top: 2rem;
    }

    label {
      margin-bottom: 0.5rem;
    }
  }
  &--dark {
    background: var(--clr-primary-dark);
  }
}

.input-field {
  @extend %center-vertical;
  flex-direction: row-reverse;
  justify-content: space-between;
  background: var(--clr-cream);
  padding: 0.5rem 1rem;
  border-radius: 0.35rem;
  &:hover,
  &:focus,
  &--active {
    outline: 3px solid var(--clr-primary);
  }

  &__input {
    all: unset;
    font-weight: 700;
    text-align: end;
    font-size: clamp(1.35rem, 2.5vw, 1.75rem);

    width: 100%;
    color: var(--clr-primary-dark);
  }

  &--error,
  &--error:hover,
  &--error:focus {
    outline: 3px solid var(--clr-error);
  }
}

.input-label {
  display: flex;
  justify-content: space-between;
}

.input-label::after {
  content: attr(data-after);
  text-align: end;
  color: var(--clr-error);
}

// Remove arrow buttons from input fields
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  /* display: none; <- Crashes Chrome on hover */
  -webkit-appearance: none;
  margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}

input[type='number'] {
  -moz-appearance: textfield; /* Firefox */
}

.result {
  display: flex;
  flex-direction: column;
  padding: 1.75rem;
  border-radius: 1em;
  justify-content: space-between;
  &__content {
    @extend %center-vertical;
    flex-direction: column;
    justify-content: space-between;

    .col {
      @extend %center-vertical;
      justify-content: space-between;
    }
  }

  &__label {
    color: var(--clr-cream);
    margin-bottom: 0;
  }

  &__label::after {
    display: block;
    content: '/ person';
    color: var(--clr-gray-dark);
  }

  &__num {
    color: var(--clr-primary);
    &::before {
      content: '$';
    }
    font-size: clamp(2rem, 5vw, 3rem);
  }
}

.attribution {
  text-align: center;
}
